{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/class/Circle.js","src/class/Game.js","src/class/Geometry.js","src/class/Point.js","src/class/Sprite.js","src/class/Tile.js","src/class/Vector.js","src/class/jcvPhysics.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","Circle","x","y","radius","_classCallCheck","this","_this","_possibleConstructorReturn","__proto__","Object","getPrototypeOf","classType","line","b","c","d","u1","u2","ret","retP1","retP2","v1","v2","p2","p1","Math","sqrt","isNaN","object","distanceTo","inteceptLineSeg","Game","containerId","canvas","document","createElement","container","getElementById","appendChild","context","getContext","window","addEventListener","resize","bind","draws","pause","requestAnimationFrame","gameloop","clearRect","getWidth","getHeight","draw","id","width","height","clientWidth","clientHeight","Geometry","round","Point","speed","targetPosition","travelComplete","vec","Vector","getLength","setLength","translate","p","atan2","dx","dy","p3","strict","b1","b2","b3","signTo","Sprite","url","urlImage","ext","substr","lastIndexOf","content","animations","default","frames","loop","playing","countFrames","position","current","iteration","inverse","velocity","_Vector2","loadJson","addFrame","maxWidth","maxHeight","minOffsetX","minOffsetY","name","ctx","ready","save","scale","drawImage","img","offsetX","offsetY","restore","add","fetch","then","res","json","keys","frame","w","h","spriteSourceSize","srcX","srcY","srcWidth","srcHeight","Image","onload","src","Tile","pattern","createPattern","fillStyle","fillRect","update","angle","getAngle","cos","sin","_Geometry2","_Point2","_Circle2","_Sprite2","_Tile2","_Game2"],"mappings":"CAAA,SAAAA,EAAAC,EAAAC,EAAAC,GAAA,SAAAC,EAAAC,EAAAC,GAAA,IAAAJ,EAAAG,GAAA,CAAA,IAAAJ,EAAAI,GAAA,CAAA,IAAAE,EAAA,mBAAAC,SAAAA,QAAA,IAAAF,GAAAC,EAAA,OAAAA,EAAAF,GAAA,GAAA,GAAAI,EAAA,OAAAA,EAAAJ,GAAA,GAAA,IAAAK,EAAA,IAAAC,MAAA,uBAAAN,EAAA,KAAA,MAAAK,EAAAE,KAAA,mBAAAF,EAAA,IAAAG,EAAAX,EAAAG,IAAAS,YAAAb,EAAAI,GAAA,GAAAU,KAAAF,EAAAC,QAAA,SAAAd,GAAA,IAAAE,EAAAD,EAAAI,GAAA,GAAAL,GAAA,OAAAI,EAAAF,GAAAF,IAAAa,EAAAA,EAAAC,QAAAd,EAAAC,EAAAC,EAAAC,GAAA,OAAAD,EAAAG,GAAAS,QAAA,IAAA,IAAAL,EAAA,mBAAAD,SAAAA,QAAAH,EAAA,EAAAA,EAAAF,EAAAa,OAAAX,IAAAD,EAAAD,EAAAE,IAAA,OAAAD,IAAAa,GAAA,SAAAT,EAAAU,EAAAJ,06BCAAN,EAAA,YAEqBW,cAEjB,SAAAA,EAAYC,EAAEC,EAAEC,GAAOC,EAAAC,KAAAL,GAAA,IAAAM,EAAAC,EAAAF,MAAAL,EAAAQ,WAAAC,OAAAC,eAAAV,IAAAJ,KAAAS,KACbJ,EAAEC,IADW,OAEnBI,EAAKH,OAASA,EACdG,EAAKK,UAAY,SAHEL,mEAKHM,GAChB,IAAOC,EAAGC,EAAGC,EAAGC,EAAIC,EAAIC,EAAKC,EAAOC,EAAOC,EAAIC,EAW/C,OAVAD,KACAC,KACAD,EAAGpB,EAAIW,EAAKW,GAAGtB,EAAIW,EAAKY,GAAGvB,EAC3BoB,EAAGnB,EAAIU,EAAKW,GAAGrB,EAAIU,EAAKY,GAAGtB,EAC3BoB,EAAGrB,EAAIW,EAAKY,GAAGvB,EAAII,KAAKJ,EACxBqB,EAAGpB,EAAIU,EAAKY,GAAGtB,EAAIG,KAAKH,EACxBW,EAAKQ,EAAGpB,EAAIqB,EAAGrB,EAAIoB,EAAGnB,EAAIoB,EAAGpB,EAC7BY,EAAI,GAAKO,EAAGpB,EAAIoB,EAAGpB,EAAIoB,EAAGnB,EAAImB,EAAGnB,GACjCW,IAAM,EACNE,EAAIU,KAAKC,KAAKb,EAAIA,EAAI,EAAIC,GAAKQ,EAAGrB,EAAIqB,EAAGrB,EAAIqB,EAAGpB,EAAIoB,EAAGpB,EAAIG,KAAKF,OAASE,KAAKF,UAC1EwB,MAAMZ,KAGVC,GAAMH,EAAIE,GAAKD,EACfG,GAAMJ,EAAIE,GAAKD,EACfK,KACAC,KACAF,KACIF,GAAM,GAAKA,GAAM,IACjBG,EAAMlB,EAAIW,EAAKY,GAAGvB,EAAIoB,EAAGpB,EAAIe,EAC7BG,EAAMjB,EAAIU,EAAKY,GAAGtB,EAAImB,EAAGnB,EAAIc,EAC7BE,EAAI,GAAKC,GAETF,GAAM,GAAKA,GAAM,IACjBG,EAAMnB,EAAIW,EAAKY,GAAGvB,EAAIoB,EAAGpB,EAAIgB,EAC7BG,EAAMlB,EAAIU,EAAKY,GAAGtB,EAAImB,EAAGnB,EAAIe,EAC7BC,EAAIA,EAAIrB,QAAUuB,GAEfF,uCAECU,GACR,MAAwB,SAApBA,EAAOjB,UACAN,KAAKwB,WAAWD,IAAWvB,KAAKF,OAASyB,EAAOzB,OAC5B,WAApByB,EAAOjB,UACPN,KAAKyB,gBAAgBF,QADzB,qBA1CM5B,0bCFA+B,aACjB,SAAAA,EAAYC,GAAa5B,EAAAC,KAAA0B,GACrB1B,KAAK4B,OAASC,SAASC,cAAc,UACrC9B,KAAK+B,UAAYF,SAASG,eAAeL,GACzC3B,KAAK+B,UAAUE,YAAYjC,KAAK4B,QAChC5B,KAAKkC,QAAUlC,KAAK4B,OAAOO,WAAW,MACtCC,OAAOC,iBAAiB,SAAUrC,KAAKsC,OAAOC,KAAKvC,OACnDA,KAAKsC,SACLtC,KAAKwC,SACLxC,KAAKyC,OAAQ,EAEbC,sBAAsB1C,KAAK2C,SAASJ,KAAKvC,oDAGzC,IAAIA,KAAKyC,MAAM,CACXzC,KAAKkC,QAAQU,UAAU,EAAG,EAAG5C,KAAK6C,WAAY7C,KAAK8C,aACnD,IAAK,IAAI7D,KAAKe,KAAKwC,MACfxC,KAAKwC,MAAMvD,GAAG8D,KAAK/C,KAAKkC,SAGhCQ,sBAAsB1C,KAAK2C,SAASJ,KAAKvC,mCAEzCgD,EAAID,GACJ/C,KAAKwC,MAAMQ,GAAMD,kCAGbC,GACJ,OAAOhD,KAAKwC,MAAMQ,sCAEXA,UACAhD,KAAKwC,MAAMQ,mCAGlBhD,KAAKwC,0CAGLxC,KAAK4B,OAAOqB,MAAQjD,KAAK6C,WACzB7C,KAAK4B,OAAOsB,OAASlD,KAAK8C,+CAG1B,OAAO9C,KAAK+B,UAAUoB,gDAItB,OAAOnD,KAAK+B,UAAUqB,iDAGtB,OACIxD,EAAGI,KAAK6C,WAAa,EACrBhD,EAAGG,KAAKA,KAAK8C,YAAc,sBAjDlBpB,+aCAA2B,aACjB,SAAAA,IAAatD,EAAAC,KAAAqD,kDAGE3E,GACX,IAAI4E,EAAQlC,KAAKkC,MAAU,IAAJ5E,GAAW,IAClC,OAAI4E,GAAS,IAAOA,IAAU,GACnB,EAEAA,qBATED,i8BCArBrE,EAAA,eAGqBuE,cAEjB,SAAAA,EAAY3D,EAAGC,GAAGE,EAAAC,KAAAuD,GAAA,IAAAtD,EAAAC,EAAAF,MAAAuD,EAAApD,WAAAC,OAAAC,eAAAkD,IAAAhE,KAAAS,OAAA,OAEdC,EAAKL,EAAIA,GAAK,EACdK,EAAKJ,EAAIA,GAAK,EACdI,EAAKK,UAAY,QACjBL,EAAKuD,MAAQ,EACbvD,EAAKwD,gBAAmB7D,EAAGA,EAAGC,EAAGA,GACjCI,EAAKyD,gBAAiB,EAPRzD,qEASAL,EAAGC,GACjBG,KAAKyD,gBAAmB7D,EAAGA,EAAGC,EAAGA,GACjCG,KAAK0D,gBAAiB,mCAGtB,IAAK1D,KAAK0D,eAAgB,CACtB,IAAIC,EAAM,IAAIC,OAAO5D,KAAKyD,eAAe7D,EAAII,KAAKJ,EAAGI,KAAKyD,eAAe5D,EAAIG,KAAKH,GAC9E8D,EAAIE,YAAc7D,KAAKwD,OACvBG,EAAIG,UAAU9D,KAAKwD,OACnBxD,KAAK+D,UAAUJ,EAAI/D,EAAG+D,EAAI9D,IAE1BG,KAAK0D,gBAAiB,uCAK9B,OACI9D,EAAGI,KAAKJ,EACRC,EAAGG,KAAKH,qCAGND,EAAGC,GACTG,KAAKJ,GAAKA,EACVI,KAAKH,GAAKA,8BAEVmE,GACAhE,KAAK+D,UAAUC,EAAEpE,EAAGoE,EAAEnE,qCAEhBmE,GACNhE,KAAK+D,WAAYC,EAAEpE,GAAKoE,EAAEnE,kCAEvBmE,GACHhE,KAAKJ,GAAKoE,EAAEpE,EACZI,KAAKH,GAAKmE,EAAEnE,mCAEPmE,GACLhE,KAAKJ,GAAKoE,EAAEpE,EACZI,KAAKH,GAAKmE,EAAEnE,kCAERmE,GACJ,OAAO5C,KAAK6C,MAAMD,EAAEnE,EAAIG,KAAKH,EAAGmE,EAAEpE,EAAII,KAAKJ,sCAEpCoE,GACP,IAAIE,EAAKF,EAAEpE,EAAII,KAAKJ,EAChBuE,EAAKH,EAAEnE,EAAIG,KAAKH,EACpB,OAAOuB,KAAKC,KAAK6C,EAAKA,EAAKC,EAAKA,kCAE7BhD,EAAID,GACP,OAAQlB,KAAKJ,EAAIsB,EAAGtB,IAAMuB,EAAGtB,EAAIqB,EAAGrB,IAAMsB,EAAGvB,EAAIsB,EAAGtB,IAAMI,KAAKH,EAAIqB,EAAGrB,sCAE/DsB,EAAID,EAAIkD,EAAIC,GACnB,IAAIC,OAAA,EAAIC,OAAA,EAAIC,OAAA,EAUZ,OATIH,GACAC,EAAKtE,KAAKyE,OAAOtD,EAAID,GAAM,EAC3BqD,EAAKvE,KAAKyE,OAAOvD,EAAIkD,GAAM,EAC3BI,EAAKxE,KAAKyE,OAAOL,EAAIjD,GAAM,IAE3BmD,EAAKtE,KAAKyE,OAAOtD,EAAID,IAAO,EAC5BqD,EAAKvE,KAAKyE,OAAOvD,EAAIkD,IAAO,EAC5BI,EAAKxE,KAAKyE,OAAOL,EAAIjD,IAAO,GAEvBmD,GAAMC,GAAQA,GAAMC,qBAxEhBjB,ifCHrBvE,EAAA,aACqB0F,aACjB,SAAAA,EAAYC,EAAKC,GAAU7E,EAAAC,KAAA0E,GACvB1E,KAAK6E,IAAMF,EAAIG,OAAOH,EAAII,YAAY,KAAO,GAC7C/E,KAAKgF,WACLhF,KAAKiF,YACDC,SACIC,QAAS,GACT3B,MAAO,EACP4B,MAAM,IAGdpF,KAAKqF,QAAU,UACfrF,KAAKsF,YAAc,EACnBtF,KAAKuF,SAAW,IAAIhC,MACpBvD,KAAKwF,QAAU,EACfxF,KAAKyF,UAAY,EACjBzF,KAAK0F,SAAU,EACf1F,KAAK2F,SAAW,IAAAC,EAAAV,QACA,QAAZlF,KAAK6E,IACL7E,KAAK6F,SAASlB,EAAKC,GACZD,GACP3E,KAAK8F,SAASnB,EAAK,GAEvB3E,KAAK+F,SAAW,EAChB/F,KAAKgG,UAAY,EACjBhG,KAAKiG,WAAa,KAClBjG,KAAKkG,WAAa,qDAERC,EAAM3C,EAAO4B,GACvBpF,KAAKyF,UAAY,EACjBzF,KAAKqF,QAAUc,EACfnG,KAAKiF,WAAWkB,GAAM3C,MAAQA,GAAS,EACvCxD,KAAKiF,WAAWkB,GAAMf,KAAOA,IAAQ,uCAE5Be,EAAMhB,GACfnF,KAAKiF,WAAWkB,IACZ3C,MAAO,EACP2B,OAAQA,EACRC,MAAM,gCAOTgB,GACGpG,KAAKiF,WAAWjF,KAAKqF,UAAYrF,KAAKiF,WAAWjF,KAAKqF,SAAS7B,MAAQxD,KAAKsF,cAE5EtF,KAAKwF,QAAUxF,KAAKiF,WAAWjF,KAAKqF,SAASF,OAAOnF,KAAKyF,aAEzDzF,KAAKyF,WACiBzF,KAAKiF,WAAWjF,KAAKqF,SAASF,OAAO3F,SAEnDQ,KAAKiF,WAAWjF,KAAKqF,SAASD,KAC9BpF,KAAKyF,UAAY,EAEjBzF,KAAKyF,UAAYzF,KAAKiF,WAAWjF,KAAKqF,SAASF,OAAO3F,OAAS,GAIvEQ,KAAKsF,YAAc,GAEnBtF,KAAKgF,QAAQhF,KAAKwF,UAAYxF,KAAKgF,QAAQhF,KAAKwF,SAASa,QACzDD,EAAIE,OACAtG,KAAK0F,UACLU,EAAIrC,UAAU/D,KAAK+F,SAAW,EAAG,GACjCK,EAAIG,OAAO,EAAG,IAEF,QAAZvG,KAAK6E,IAELuB,EAAII,UACAxG,KAAKgF,QAAQhF,KAAKwF,SAASiB,IAC3BzG,KAAKgF,QAAQhF,KAAKwF,SAAS5F,EAC3BI,KAAKgF,QAAQhF,KAAKwF,SAAS3F,EAC3BG,KAAKgF,QAAQhF,KAAKwF,SAASvC,MAC3BjD,KAAKgF,QAAQhF,KAAKwF,SAAStC,OAC3BlD,KAAKuF,SAAS3F,EAAII,KAAKgF,QAAQhF,KAAKwF,SAASkB,QAAU1G,KAAK+F,SAAW,EACvE/F,KAAKuF,SAAS1F,EAAIG,KAAKgF,QAAQhF,KAAKwF,SAASmB,SAAW3G,KAAKgG,UAAY,IACzEhG,KAAKgF,QAAQhF,KAAKwF,SAASvC,MAC3BjD,KAAKgF,QAAQhF,KAAKwF,SAAStC,QAG/BkD,EAAII,UACAxG,KAAKgF,QAAQhF,KAAKwF,SAASiB,IAC3BzG,KAAKuF,SAAS3F,EACdI,KAAKuF,SAAS1F,GAKtBuG,EAAIQ,WAER5G,KAAKsF,cACLtF,KAAKuF,SAASsB,IAAI7G,KAAK2F,2CAElBhB,EAAKC,GACVkC,MAAMnC,GACDoC,KAAK,SAAUC,GACZ,OAAOA,EAAIC,SAEdF,KAAK,SAAUE,GACZ,IAAI9B,EAAS8B,EAAK9B,OAClB,IAAK,IAAIlG,KAAKkG,EACVnF,KAAK8F,SACDlB,EACAxE,OAAO8G,KAAKlH,KAAKgF,SAASxF,OAC1B2F,EAAOlG,GAAGkI,MAAMvH,EAChBuF,EAAOlG,GAAGkI,MAAMtH,EAChBsF,EAAOlG,GAAGkI,MAAMC,EAChBjC,EAAOlG,GAAGkI,MAAME,EAChBlC,EAAOlG,GAAGqI,iBAAiB1H,EAC3BuF,EAAOlG,GAAGqI,iBAAiBzH,IAGrC0C,KAAKvC,wCAEN2E,EAAKY,EAAUgC,EAAMC,EAAMC,EAAUC,EAAWhB,EAASC,GAC1D3G,KAAK+F,SAAW0B,IAChBzH,KAAK+F,SAAW0B,GAEhBzH,KAAKgG,UAAY0B,IACjB1H,KAAKgG,UAAY0B,IAEE,MAAnB1H,KAAKiG,YAAsBjG,KAAKiG,WAAaS,KAC7C1G,KAAKiG,WAAaS,IAEC,MAAnB1G,KAAKkG,YAAsBlG,KAAKkG,WAAaS,KAC7C3G,KAAKkG,WAAaS,GAEtB,IAAIF,EAAM,IAAIkB,MACd3H,KAAKgF,QAAQO,IACTZ,IAAKA,EACL0B,OAAO,GAEXI,EAAImB,OAAS,WACT5H,KAAKgF,QAAQO,GAAUkB,IAAMA,EAC7BzG,KAAKgF,QAAQO,GAAUtC,MAAQwE,GAAYhB,EAAIxD,MAC/CjD,KAAKgF,QAAQO,GAAUrC,OAASwE,GAAajB,EAAIvD,OACjDlD,KAAKgF,QAAQO,GAAU3F,EAAI2H,GAAQ,EACnCvH,KAAKgF,QAAQO,GAAU1F,EAAI2H,GAAQ,EACnCxH,KAAKgF,QAAQO,GAAUmB,QAAUA,GAAW,EAC5C1G,KAAKgF,QAAQO,GAAUoB,QAAUA,GAAW,EAC5C3G,KAAKgF,QAAQO,GAAUc,OAAQ,GAEjC9D,KAAKvC,MACPyG,EAAIoB,IAAMlD,qBAjJGD,68BCDrB1F,EAAA,aACqB8I,cACjB,SAAAA,EAAYnD,EAAKC,GAAU,OAAA7E,EAAAC,KAAA8H,GAAA5H,EAAAF,MAAA8H,EAAA3H,WAAAC,OAAAC,eAAAyH,IAAAvI,KAAAS,KACjB2E,EAAKC,0DAMVwB,GAiBD,GAhBIpG,KAAKiF,WAAWjF,KAAKqF,UAAYrF,KAAKiF,WAAWjF,KAAKqF,SAAS7B,MAAQxD,KAAKsF,cAE5EtF,KAAKwF,QAAUxF,KAAKiF,WAAWjF,KAAKqF,SAASF,OAAOnF,KAAKyF,aAEzDzF,KAAKyF,WACiBzF,KAAKiF,WAAWjF,KAAKqF,SAASF,OAAO3F,SAEnDQ,KAAKiF,WAAWjF,KAAKqF,SAASD,KAC9BpF,KAAKyF,UAAY,EAEjBzF,KAAKyF,UAAYzF,KAAKiF,WAAWjF,KAAKqF,SAASF,OAAO3F,OAAS,GAIvEQ,KAAKsF,YAAc,GAEnBtF,KAAKgF,QAAQhF,KAAKwF,UAAYxF,KAAKgF,QAAQhF,KAAKwF,SAASa,MAAO,CAMhE,GALAD,EAAIE,OACAtG,KAAK0F,UACLU,EAAIrC,UAAU/D,KAAK+F,SAAW,EAAG,GACjCK,EAAIG,OAAO,EAAG,IAEF,QAAZvG,KAAK6E,IAELuB,EAAII,UACAxG,KAAKgF,QAAQhF,KAAKwF,SAASiB,IAC3BzG,KAAKgF,QAAQhF,KAAKwF,SAAS5F,EAC3BI,KAAKgF,QAAQhF,KAAKwF,SAAS3F,EAC3BG,KAAKgF,QAAQhF,KAAKwF,SAASvC,MAC3BjD,KAAKgF,QAAQhF,KAAKwF,SAAStC,OAC3BlD,KAAKuF,SAAS3F,EAAII,KAAKgF,QAAQhF,KAAKwF,SAASkB,QAAU1G,KAAK+F,SAAW,EACvE/F,KAAKuF,SAAS1F,EAAIG,KAAKgF,QAAQhF,KAAKwF,SAASmB,SAAW3G,KAAKgG,UAAY,IACzEhG,KAAKgF,QAAQhF,KAAKwF,SAASvC,MAC3BjD,KAAKgF,QAAQhF,KAAKwF,SAAStC,YAE5B,CAEH,IAAI6E,EAAU3B,EAAI4B,cAAchI,KAAKgF,QAAQhF,KAAKwF,SAASiB,IAAK,UAChEL,EAAI6B,UAAYF,EAChB3B,EAAIrC,UAAU/D,KAAKuF,SAAS3F,EAAEI,KAAKuF,SAAS1F,GAC5CuG,EAAI8B,UAAUlI,KAAKuF,SAAS3F,GAAGI,KAAKuF,SAAS1F,EAAEuG,EAAIxE,OAAOqB,MAAMmD,EAAIxE,OAAOsB,QAC3EkD,EAAIrC,WAAW/D,KAAKuF,SAAS3F,GAAII,KAAKuF,SAAS1F,GAGnDuG,EAAIQ,UAER5G,KAAKsF,cACLtF,KAAKuF,SAASsB,IAAI7G,KAAK2F,6BAxDVmC,68BCDrB9I,EAAA,YACqB4E,cACjB,SAAAA,EAAYhE,EAAGC,GAAGE,EAAAC,KAAA4D,GAAA,IAAA3D,EAAAC,EAAAF,MAAA4D,EAAAzD,WAAAC,OAAAC,eAAAuD,IAAArE,KAAAS,KACRJ,EAAEC,IADM,OAEdI,EAAKkI,SAFSlI,4DAKdD,KAAKR,OAASQ,KAAK6D,YACnB7D,KAAKoI,MAAQpI,KAAKqI,wCAEjBzI,GACDI,KAAKJ,EAAIA,EACTI,KAAKmI,sCAEJtI,GACDG,KAAKH,EAAIA,EACTG,KAAKmI,4CAGL,OAAO/G,KAAK6C,MAAMjE,KAAKH,EAAGG,KAAKJ,oCAE1BwI,GACX,IAAI5I,EAASQ,KAAK6D,YAClB7D,KAAKJ,EAAIwB,KAAKkH,IAAIF,GAAS5I,EACrBQ,KAAKH,EAAIuB,KAAKmH,IAAIH,GAAS5I,EAC3BQ,KAAKmI,6CAGL,OAAO/G,KAAKC,KAAKrB,KAAKJ,EAAII,KAAKJ,EAAII,KAAKH,EAAIG,KAAKH,qCAE3CL,GACZ,IAAI4I,EAAQpI,KAAKqI,WACjBrI,KAAKJ,EAAIwB,KAAKkH,IAAIF,GAAS5I,EACrBQ,KAAKH,EAAIuB,KAAKmH,IAAIH,GAAS5I,EAC3BQ,KAAKmI,4BAjCQvE,qGCCrB,QAAA5E,EAAA,mBAEAA,EAAA,gBAEAA,EAAA,iBAEAA,EAAA,iBAEAA,EAAA,eAEAA,EAAA,iBAEAA,EAAA,WAXAoD,OAAOiB,SAAPmF,EAAAtD,QAEA9C,OAAOmB,MAAPkF,EAAAvD,QAEA9C,OAAOzC,OAAP+I,EAAAxD,QAEA9C,OAAOsC,OAAPiE,EAAAzD,QAEA9C,OAAO0F,KAAPc,EAAA1D,QAEA9C,OAAOwB,OAAPgC,EAAAV,QAEA9C,OAAOV,KAAPmH,EAAA3D","file":"jcvPhysics.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","import Point from './Point'; \r\n\r\nexport default class Circle extends Point {\r\n    \r\n    constructor(x,y,radius){\r\n        super(x,y);\r\n        this.radius = radius;\r\n        this.classType = \"Circle\";\r\n    }\r\n        inteceptLineSeg(line) {\r\n        var a, b, c, d, u1, u2, ret, retP1, retP2, v1, v2;\r\n        v1 = {};\r\n        v2 = {};\r\n        v1.x = line.p2.x - line.p1.x;\r\n        v1.y = line.p2.y - line.p1.y;\r\n        v2.x = line.p1.x - this.x;\r\n        v2.y = line.p1.y - this.y;\r\n        b = (v1.x * v2.x + v1.y * v2.y);\r\n        c = 2 * (v1.x * v1.x + v1.y * v1.y);\r\n        b *= -2;\r\n        d = Math.sqrt(b * b - 2 * c * (v2.x * v2.x + v2.y * v2.y - this.radius * this.radius));\r\n        if (isNaN(d)) { // no intercept\r\n            return false;\r\n        }\r\n        u1 = (b - d) / c;  // these represent the unit distance of point one and two on the line\r\n        u2 = (b + d) / c;\r\n        retP1 = {};   // return points\r\n        retP2 = {}\r\n        ret = []; // return array\r\n        if (u1 <= 1 && u1 >= 0) {  // add point if on the line segment\r\n            retP1.x = line.p1.x + v1.x * u1;\r\n            retP1.y = line.p1.y + v1.y * u1;\r\n            ret[0] = retP1;\r\n        }\r\n        if (u2 <= 1 && u2 >= 0) {  // second add point if on the line segment\r\n            retP2.x = line.p1.x + v1.x * u2;\r\n            retP2.y = line.p1.y + v1.y * u2;\r\n            ret[ret.length] = retP2;\r\n        }\r\n        return ret;\r\n    }\r\n    collisionTo(object) {\r\n        if (object.classType == \"Point\") {\r\n            return this.distanceTo(object) <= this.radius + object.radius;\r\n        } else if (object.classType == \"Segment\") {\r\n            return this.inteceptLineSeg(object);\r\n        }\r\n    }\r\n}\r\n","export default class Game  {\r\n    constructor(containerId) {\r\n        this.canvas = document.createElement('canvas');\r\n        this.container = document.getElementById(containerId);\r\n        this.container.appendChild(this.canvas);\r\n        this.context = this.canvas.getContext('2d');\r\n        window.addEventListener('resize', this.resize.bind(this));\r\n        this.resize();\r\n        this.draws = {};\r\n        this.pause = false;\r\n        //todo pause request\r\n        requestAnimationFrame(this.gameloop.bind(this));\r\n    }\r\n    gameloop() {\r\n        if(!this.pause){\r\n            this.context.clearRect(0, 0, this.getWidth(), this.getHeight());\r\n            for (let i in this.draws) {\r\n                this.draws[i].draw(this.context);\r\n            }         \r\n        }\r\n        requestAnimationFrame(this.gameloop.bind(this));\r\n    }\r\n    add(id, draw) {\r\n        this.draws[id] = draw;\r\n    }\r\n\r\n    getDraw(id){\r\n        return this.draws[id];\r\n    }\r\n    removeDraw(id){\r\n        delete this.draws[id];\r\n    }\r\n    clear(){\r\n        this.draws = {};\r\n    }\r\n    resize() {\r\n        this.canvas.width = this.getWidth();\r\n        this.canvas.height = this.getHeight();\r\n    }\r\n    getWidth() {\r\n        return this.container.clientWidth;\r\n\r\n    }\r\n    getHeight() {\r\n        return this.container.clientHeight;\r\n    }\r\n    getCenter() {\r\n        return {\r\n            x: this.getWidth() / 2,\r\n            y: this.this.getHeight() / 2,\r\n        }\r\n    }\r\n}","export default class Geometry {\r\n    constructor(){\r\n        \r\n    }\r\n    static round10(n) {\r\n        var round = Math.round(n * 100) / 100;\r\n        if (round <= 0.1 && round >= -0.1) {\r\n            return 0;\r\n        } else {\r\n            return round;\r\n        }\r\n    }\r\n};\r\n","import Geometry from './Geometry';\r\n\r\n\r\nexport default class Point extends Geometry {\r\n\r\n    constructor(x, y) {\r\n        super();\r\n        this.x = x || 0;\r\n        this.y = y || 0;\r\n        this.classType = \"Point\";\r\n        this.speed = 1;\r\n        this.targetPosition = { x: x, y: y };\r\n        this.travelComplete = true;\r\n    }\r\n    setTargetPosition(x, y) {\r\n        this.targetPosition = { x: x, y: y };\r\n        this.travelComplete = false;\r\n    }\r\n    travel() {\r\n        if (!this.travelComplete) {\r\n            var vec = new Vector(this.targetPosition.x - this.x, this.targetPosition.y - this.y);\r\n            if (vec.getLength() > this.speed) {\r\n                vec.setLength(this.speed);\r\n                this.translate(vec.x, vec.y);\r\n            } else {\r\n                this.travelComplete = true;\r\n            }\r\n        }\r\n    }\r\n    getObject() {\r\n        return {\r\n            x: this.x,\r\n            y: this.y\r\n        }\r\n    }\r\n    translate(x, y) {\r\n        this.x += x;\r\n        this.y += y;\r\n    }\r\n    add(p) {\r\n        this.translate(p.x, p.y);\r\n    }\r\n    soustract(p) {\r\n        this.translate(- p.x, - p.y);\r\n    }\r\n    divide(p) {\r\n        this.x /= p.x;\r\n        this.y /= p.y;\r\n    }\r\n    multiply(p) {\r\n        this.x *= p.x;\r\n        this.y *= p.y;\r\n    }\r\n    angleTo(p) {\r\n        return Math.atan2(p.y - this.y, p.x - this.x);\r\n    }\r\n    distanceTo(p) {\r\n        var dx = p.x - this.x,\r\n            dy = p.y - this.y;\r\n        return Math.sqrt(dx * dx + dy * dy);\r\n    }\r\n    signTo(p1, p2) {\r\n        return (this.x - p2.x) * (p1.y - p2.y) - (p1.x - p2.x) * (this.y - p2.y);\r\n    }\r\n    inTriangle(p1, p2, p3, strict) {\r\n        let b1, b2, b3;\r\n        if (strict) {\r\n            b1 = this.signTo(p1, p2) < 0;\r\n            b2 = this.signTo(p2, p3) < 0;\r\n            b3 = this.signTo(p3, p1) < 0;\r\n        } else {\r\n            b1 = this.signTo(p1, p2) <= 0;\r\n            b2 = this.signTo(p2, p3) <= 0;\r\n            b3 = this.signTo(p3, p1) <= 0;\r\n        }\r\n        return ((b1 == b2) && (b2 == b3));\r\n    }\r\n}\r\n","import Vector from './Vector';\r\nexport default class Sprite {\r\n    constructor(url, urlImage) {\r\n        this.ext = url.substr(url.lastIndexOf('.') + 1);\r\n        this.content = {};\r\n        this.animations = {\r\n            \"default\": {\r\n                frames: [0],\r\n                speed: 1,\r\n                loop: false\r\n            }\r\n        };\r\n        this.playing = \"default\";\r\n        this.countFrames = 0;\r\n        this.position = new Point();\r\n        this.current = 0;\r\n        this.iteration = 0;\r\n        this.inverse = false;\r\n        this.velocity = new Vector();\r\n        if (this.ext == 'json') {\r\n            this.loadJson(url, urlImage);\r\n        } else if (url) {\r\n            this.addFrame(url, 0);\r\n        }\r\n        this.maxWidth = 0;\r\n        this.maxHeight = 0;\r\n        this.minOffsetX = null;\r\n        this.minOffsetY = null;\r\n    }\r\n    playAnimation(name, speed, loop) {\r\n        this.iteration = 0;\r\n        this.playing = name;\r\n        this.animations[name].speed = speed || 5;\r\n        this.animations[name].loop = loop || false;\r\n    }\r\n    addAnimation(name, frames) {\r\n        this.animations[name] = {\r\n            speed: 5,\r\n            frames: frames,\r\n            loop: true\r\n        }\r\n    }\r\n    /**\r\n     * \r\n     * @param {CanvasRenderingContext2D} ctx \r\n     */\r\n    draw(ctx) {\r\n        if (this.animations[this.playing] && this.animations[this.playing].speed < this.countFrames) {\r\n\r\n            this.current = this.animations[this.playing].frames[this.iteration];\r\n\r\n            this.iteration++;\r\n            if (this.iteration >= this.animations[this.playing].frames.length) {\r\n\r\n                if (this.animations[this.playing].loop) {\r\n                    this.iteration = 0;\r\n                } else {\r\n                    this.iteration = this.animations[this.playing].frames.length - 1;\r\n                }\r\n            }\r\n\r\n            this.countFrames = 0;\r\n        }\r\n        if (this.content[this.current] && this.content[this.current].ready) {\r\n            ctx.save();\r\n            if (this.inverse) {\r\n                ctx.translate(this.maxWidth / 2, 0);\r\n                ctx.scale(-1, 1);\r\n            }\r\n            if (this.ext == 'json') {\r\n\r\n                ctx.drawImage(\r\n                    this.content[this.current].img,\r\n                    this.content[this.current].x,\r\n                    this.content[this.current].y,\r\n                    this.content[this.current].width,\r\n                    this.content[this.current].height,\r\n                    this.position.x + this.content[this.current].offsetX - this.maxWidth / 2,\r\n                    this.position.y + this.content[this.current].offsetY - (this.maxHeight + 22),\r\n                    this.content[this.current].width,\r\n                    this.content[this.current].height\r\n                );\r\n            }else{\r\n                ctx.drawImage(\r\n                    this.content[this.current].img,\r\n                    this.position.x,\r\n                    this.position.y\r\n                );\r\n                \r\n            }\r\n\r\n            ctx.restore();\r\n        }\r\n        this.countFrames++;\r\n        this.position.add(this.velocity);\r\n    }\r\n    loadJson(url, urlImage) {\r\n        fetch(url)\r\n            .then(function (res) {\r\n                return res.json();\r\n            })\r\n            .then(function (json) {\r\n                let frames = json.frames;\r\n                for (let i in frames) {\r\n                    this.addFrame(\r\n                        urlImage,\r\n                        Object.keys(this.content).length,\r\n                        frames[i].frame.x,\r\n                        frames[i].frame.y,\r\n                        frames[i].frame.w,\r\n                        frames[i].frame.h,\r\n                        frames[i].spriteSourceSize.x,\r\n                        frames[i].spriteSourceSize.y\r\n                    )\r\n                }\r\n            }.bind(this));\r\n    }\r\n    addFrame(url, position, srcX, srcY, srcWidth, srcHeight, offsetX, offsetY) {\r\n        if (this.maxWidth < srcWidth) {\r\n            this.maxWidth = srcWidth;\r\n        }\r\n        if (this.maxHeight < srcHeight) {\r\n            this.maxHeight = srcHeight;\r\n        }\r\n        if (this.minOffsetX == null || this.minOffsetX > offsetX) {\r\n            this.minOffsetX = offsetX;\r\n        }\r\n        if (this.minOffsetY == null || this.minOffsetY > offsetY) {\r\n            this.minOffsetY = offsetY;\r\n        }\r\n        let img = new Image();\r\n        this.content[position] = {\r\n            url: url,\r\n            ready: false\r\n        };\r\n        img.onload = function () {\r\n            this.content[position].img = img;\r\n            this.content[position].width = srcWidth || img.width;\r\n            this.content[position].height = srcHeight || img.height;\r\n            this.content[position].x = srcX || 0;\r\n            this.content[position].y = srcY || 0;\r\n            this.content[position].offsetX = offsetX || 0;\r\n            this.content[position].offsetY = offsetY || 0;\r\n            this.content[position].ready = true;\r\n\r\n        }.bind(this);\r\n        img.src = url;\r\n    }\r\n}","import Sprite from './Sprite';\r\nexport default class Tile extends Sprite {\r\n    constructor(url, urlImage) {\r\n        super(url, urlImage)\r\n    }\r\n    /**\r\n * \r\n * @param {CanvasRenderingContext2D} ctx \r\n */\r\n    draw(ctx) {\r\n        if (this.animations[this.playing] && this.animations[this.playing].speed < this.countFrames) {\r\n\r\n            this.current = this.animations[this.playing].frames[this.iteration];\r\n\r\n            this.iteration++;\r\n            if (this.iteration >= this.animations[this.playing].frames.length) {\r\n\r\n                if (this.animations[this.playing].loop) {\r\n                    this.iteration = 0;\r\n                } else {\r\n                    this.iteration = this.animations[this.playing].frames.length - 1;\r\n                }\r\n            }\r\n\r\n            this.countFrames = 0;\r\n        }\r\n        if (this.content[this.current] && this.content[this.current].ready) {\r\n            ctx.save();\r\n            if (this.inverse) {\r\n                ctx.translate(this.maxWidth / 2, 0);\r\n                ctx.scale(-1, 1);\r\n            }\r\n            if (this.ext == 'json') {\r\n\r\n                ctx.drawImage(\r\n                    this.content[this.current].img,\r\n                    this.content[this.current].x,\r\n                    this.content[this.current].y,\r\n                    this.content[this.current].width,\r\n                    this.content[this.current].height,\r\n                    this.position.x + this.content[this.current].offsetX - this.maxWidth / 2,\r\n                    this.position.y + this.content[this.current].offsetY - (this.maxHeight + 22),\r\n                    this.content[this.current].width,\r\n                    this.content[this.current].height\r\n                );\r\n            } else {\r\n             \r\n                var pattern = ctx.createPattern(this.content[this.current].img, 'repeat');\r\n                ctx.fillStyle = pattern;\r\n                ctx.translate(this.position.x,this.position.y);\r\n                ctx.fillRect(-this.position.x,-this.position.y,ctx.canvas.width,ctx.canvas.height);\r\n                ctx.translate(-this.position.x, -this.position.y);\r\n\r\n            }\r\n            ctx.restore();\r\n        }\r\n        this.countFrames++;\r\n        this.position.add(this.velocity);\r\n    }\r\n}","import Point from './Point';\r\nexport default class Vector extends Point {\r\n    constructor(x, y) {\r\n        super(x,y);\r\n        this.update();\r\n    }\r\n    update(){\r\n        this.length = this.getLength();\r\n        this.angle = this.getAngle();\r\n    }\r\n    setX(x){\r\n        this.x = x;\r\n        this.update();\r\n    }\r\n    setY(y){\r\n        this.y = y;\r\n        this.update();\r\n    }\r\n    getAngle(){\r\n        return Math.atan2(this.y, this.x);\r\n    }\r\n    setAngle(angle){\r\n\t\tvar length = this.getLength();\r\n\t\tthis.x = Math.cos(angle) * length;\r\n        this.y = Math.sin(angle) * length;\r\n        this.update();\r\n    }\r\n    getLength(){\r\n        return Math.sqrt(this.x * this.x + this.y * this.y);\r\n    }\r\n    setLength(length){\r\n\t\tvar angle = this.getAngle();\r\n\t\tthis.x = Math.cos(angle) * length;\r\n        this.y = Math.sin(angle) * length;\r\n        this.update();\r\n    }\r\n}","/// <reference path=\"../../node_modules/phaser-ce/typescript/phaser.d.ts\" />\r\n\r\nimport Geometry from './Geometry';\r\nwindow.Geometry = Geometry;\r\nimport Point from './Point';\r\nwindow.Point = Point;\r\nimport Circle from './Circle';\r\nwindow.Circle = Circle;\r\nimport Sprite from './Sprite';\r\nwindow.Sprite = Sprite;\r\nimport Tile from './Tile';\r\nwindow.Tile = Tile;\r\nimport Vector from './Vector';\r\nwindow.Vector = Vector;\r\nimport Game from './Game';\r\nwindow.Game = Game;"]}